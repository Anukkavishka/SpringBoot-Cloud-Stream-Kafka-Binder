#order-service-----------------------
server.port:8081


spring.h2.console.enabled=true



#default 
spring.cloud.stream.kafka.binder.autoCreateTopics=true
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.mms=1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#in abive you have to provide a custom serializer for the Order event object

#order output stream by order-service

spring.cloud.stream.bindings.ordersOut.destination=ordout
spring.cloud.stream.bindings.ordersOut.producer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.ordersOut.producer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.ordersOut.producer.value-serde=com.simple.orderservice.serde.Seri



#order input stream from stock-service 

spring.cloud.stream.bindings.ordersIn.destination=stkout
spring.cloud.stream.bindings.ordersIn.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.ordersIn.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.ordersIn.consumer.value-serde=com.simple.orderservice.serde.Deser


