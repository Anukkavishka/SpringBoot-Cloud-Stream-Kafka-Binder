#stock-service-----------------------------------------

# Enabling H2 Console
spring.h2.console.enabled=true



#default 
spring.cloud.stream.kafka.binder.autoCreateTopics=true
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.mms=1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=com.simple.stockservice.serde.Deser
#in abive you have to provide a custom serializer for the Order event object

#order output stream by stock-service

spring.cloud.stream.bindings.ordersIn.destination=stkout
spring.cloud.stream.bindings.ordersIn.producer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.ordersIn.producer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.ordersIn.producer.value-serde=com.simple.stockservice.serde.Seri

#spring.cloud.stream.bindings.ordersOut.destination=ordout
#spring.cloud.stream.bindings.ordersOut.producer.header-mode=raw
#spring.cloud.stream.kafka.streams.bindings.ordersOut.producer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.bindings.ordersOut.producer.value-serde=com.simple.orderservice.serde.Seri


#order info input stream from order-service

spring.cloud.stream.bindings.ordersOut.destination=ordout
spring.cloud.stream.bindings.ordersOut.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.ordersOut.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.ordersOut.consumer.value-serde=com.simple.stockservice.serde.Deser

